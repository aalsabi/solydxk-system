#!/bin/bash

partition=$1
passphrase=$2
commands=$3

target='/target'

if [ -z $partition ] || [ ! -e $partition ]; then
  echo "An existing OS partition path is needed"
  echo "E.g.: chroot-partition /dev/sda1"
  echo
  echo "If the partition is a LUKS encrypted partition:"
  echo "chroot-partition /dev/sda1 my_passphrase"
  echo
  echo "You can run a command:"
  echo "chroot-partition /dev/sda1 \"\" \"command 1;command 2\""
  echo "chroot-partition /dev/sda1 my_passphrase \"command 1;command 2\""
  echo
  echo "List all partitions with: sudo fdisk -l"
  exit
fi


# Check if partition is already mounted and use that as the target
MOUNTCHK=$(grep "$partition " /proc/mounts | awk '{print $2}')
if [ "$MOUNTCHK" != "" ]; then
  target=$MOUNTCHK
fi

# Check if target is used as mount point by anything other than partition
MOUNTCHK=$(grep " $target " /proc/mounts | grep -v "$partition")
if [ "$MOUNTCHK" != "" ]; then
  echo "$target in use - exiting"
  exit
fi

# Be root to run this script
if [ $UID -ne 0 ]; then
  sudo $0 $@
  exit
fi

# Create temporary dir
if [ ! -d $target ]; then
  echo "Create directory $target"
  mkdir $target
fi

# Mounting
echo "Mounting $partition on $target"
if [ "$passphrase" != '' ]; then
  bn=$(basename $partition)
  printf "$passphrase" | cryptsetup open $partition $bn
  partition="/dev/mapper/$bn"
fi
mount $partition $target

if [ ! -e $target/dev ] || [ ! -e $target/sys ]; then
  echo "Could not find $target/dev and $target/sys - exiting"
  umount $target
  rmdir $target
  exit
fi

MOUNTCHK=$(grep "$target" /proc/mounts | awk '{print $2}')
if [[ ! "$MOUNTCHKT" =~ '$target/dev' ]]; then
  mount --bind /dev/ $target/dev
  mount --bind /dev/shm $target/dev/shm
  mount --bind /dev/pts $target/dev/pts
  UMOUNTS="$target/dev $target/dev/shm $target/dev/pts"
fi
if [[ ! "$MOUNTCHKT" =~ '$target/sys' ]]; then
  mount --bind /sys/ $target/sys
  mount --bind /sys/fs/fuse/connections $target/sys/fs/fuse/connections
  UMOUNTS="$UMOUNTS $target/sys $target/sys/fs/fuse/connections"
fi
if [[ ! "$MOUNTCHKT" =~ '$target/proc' ]]; then
  mount --bind /proc/ $target/proc
  UMOUNTS="$UMOUNTS $target/proc"
fi

# Chroot into dir
echo "Chrooting into $target"
# Mount all partitions in the chrooted fstab
chroot $target/ /bin/sh -c "mount -a 2>/dev/null"
# Execute any passed commands
if [ "$commands" != "" ]; then
  chroot $target/ /bin/sh -c "$commands"
fi
# If the last command wasn't exit, keep the chrooted partition open
if [ "${commands: -4}" != "exit" ]; then
  chroot $target
fi

# Unmount when done
umount -f $UMOUNTS 2>/dev/null
grep "$target" /proc/mounts | grep ^/dev | grep -v "$partition" | awk '{print $1}' | xargs umount -f 2>/dev/null

if [ "$target" == "/target" ]; then
  echo "Unmounting $target"
  umount -lf $target
  rmdir $target 2>/dev/null
fi
